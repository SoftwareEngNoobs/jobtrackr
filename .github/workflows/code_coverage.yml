name: Code-Coverage-Generation

on:
  push:
    branches: 
     - main
     - release-*
  pull_request:
    branches: 
     - main
     - release-*

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        # Wait until MongoDB is ready
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install ollama
      run: curl -fsSL https://ollama.com/install.sh | sh
    - name: Run ollama
      run: |
        ollama serve &
        ollama pull llama3.2
    - name: Create .env file
      run: |
        echo "MONGO_DB_CONNECTION=mongodb://localhost:27017/" >> .env
        echo "DATABASE_TYPE=development" >> .env 
        echo "APP_SECRET_KEY=testing" >> .env
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    - name: Add folders to Python Path
      run: |
          echo "PYTHONPATH=backend" >> $GITHUB_ENV
    - name: Test all
      run: |
        python backend/tests.py
    - name: Run tests with coverage
      run: |
        python -m pip install coverage
        python -m coverage run --source=backend -m unittest discover -s backend/tests
        python -m coverage report
        python -m coverage xml

    - name: Upload coverage reports to Codecov with GitHub Action
      uses: codecov/codecov-action@v4.2.0
      with:
        files: coverage.xml
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

